---
- name: "Get Public Subnet ID"
  ec2_vpc_subnet_facts:
    region: "{{ region }}"
    filters:
      "tag:Name": "{{ vpc_name }}-public1"
  register: public_subnet_1

- name: Subnet ID
  debug:
    var: public_subnet_1['subnets'][0]['id']

- name: Get bastion SG ID
  ec2_group_facts:
    region: "{{ region }}"
    filters:
      group-name: "{{ vpc_name }}-bastion"
  register: bastion_sg

- name: Bastion SG ID
  debug:
    var: bastion_sg['security_groups'][0]['group_id']

- name: Create Bastion
  ec2:
    region: "{{ region }}"
    key_name: "{{ keypair_name }}"
    group_id: "{{ bastion_sg['security_groups'][0]['group_id'] }}"
    instance_type: t2.micro
    image: "{{ ami_id }}"
    wait: yes
    wait_timeout: 500
    exact_count: 1
    instance_tags:
      Name: "{{ vpc_name }}-bastion"
      Environment: Dev
    count_tag:
      Name: "{{ vpc_name }}-bastion"
      Environment: Dev
    vpc_subnet_id: "{{ public_subnet_1['subnets'][0]['id'] }}"
    assign_public_ip: yes
  register: bastion_facts

- debug: "var=bastion_facts"

- name: Capture Bastion public IP
  set_fact:
    bastion_public_ip: "{{ bastion_facts['instances'][0]['public_ip'] }}"
  when: bastion_facts['instances'] | length > 0

- name: Capture Bastion public IP
  set_fact:
    bastion_public_ip: "{{ bastion_facts['tagged_instances'][0]['public_ip'] }}"
  when: bastion_facts['tagged_instances'] | length > 0

- name: Display Public IP
  debug:
    var: bastion_public_ip

- name: Remove lines with unwanted occurrences of ListenAddress
  local_action: lineinfile
                dest="./hosts"
                regexp="^ansible_host=(?!{{ bastion_public_ip|replace('.', '\.') }}|{{ bastion_public_ip|replace('.', '\.') }})"
                state=absent

- name: Listen on public and private IP
  local_action: lineinfile
                dest="./hosts"
                line={{ item.line }}
                insertafter={{ item.insertafter }}
  with_items:
    - { line: "bastion ansible_host={{ bastion_public_ip }}", insertafter: "^#?bastion" }

- name: insert/update "Match User" configuration block in ./sshd.cfg
  blockinfile:
    dest: ./ssh.cfg
    block: |
      Host 10.5.*
          User {{ bastion_user }}
          ProxyCommand ssh -o "StrictHostKeyChecking=no" {{ bastion_user }}@{{ bastion_public_ip }} nc %h %p

      Host {{ bastion_public_ip }}
      	Hostname {{ bastion_public_ip }}
      	User {{ bastion_user }}
      	ControlMaster   auto
      	ControlPath     ~/.ssh/mux-%r@%h:%p
      	ControlPersist  15m
      	IdentityFile    ~/.ssh/hosty-key.pem
