---
# get NAT gateway if already exists
- name: get NAT gateway id using subnet id
  shell: "aws ec2 describe-nat-gateways --filter Name=subnet-id,Values={{ public_subnet_1['subnet']['id'] }}"
  register: nat_gateway
  changed_when: false
- set_fact:
    nat_gateway_info: "{{ nat_gateway.stdout | from_json }}"
- set_fact:
    nat_network_interface_id: "{{ nat_gateway_info.NatGateways[0].NatGatewayAddresses[0].NetworkInterfaceId }}"
  when:
    - nat_gateway_info.NatGateways[0] is defined
    - nat_gateway_info.NatGateways[0].NatGatewayAddresses[0] is defined
- set_fact:
    nat_network_interface_id: null
  when: nat_network_interface_id is undefined

- debug: var=nat_network_interface_id

# Create new Elastic IP
- name: Allocate a new elastic IP without associating it to anything
  ec2_eip:
    state: present
    device_id: "{{ nat_network_interface_id }}"
    region: "{{ region }}"
    in_vpc: true
    release_on_disassociation: true
    reuse_existing_ip_allowed: true
  register: elastic_ip_info

- debug: var=elastic_ip_info

# Create new NAT service
- name: Create new NAT Gateway service using an allocation-id
  ec2_vpc_nat_gateway:
    state: present
    if_exist_do_not_create: true
    subnet_id: "{{ public_subnet_1['subnet']['id'] }}"
    allocation_id: "{{ elastic_ip_info.allocation_id }}"
    region: "{{ region }}"
    wait: true
  register: nat_gateway_info

- debug: var=nat_gateway_info

# Update VPC routeing tables
# - name: update vpc routing tables
#   ec2_vpc:
#     region: "{{ region }}"
#     cidr_block: "{{ vpc_cidr }}"
#     resource_tags: "{{ vpc_resource_tags }}"
#     internet_gateway: "{{ igw['gateway_id']|string }}"
#     subnets: "{{ vpc.subnets }}"
#     route_tables:
#       - subnets: "{{ vpc.subnets | get_subnets('tier', 'public', 'cidr') }}"
#         routes:
#           - dest: 0.0.0.0/0
#             gw: igw
#         resource_tags: "{{ vpc_route_tables_tags }}"
#       - subnets: "{{ vpc.subnets | get_subnets('tier', 'private', 'cidr') }}"
#         routes:
#           - dest: 0.0.0.0/0
#             gw: "{{ nat_gateway_info.nat_gateway_id }}"
#         resource_tags: "{{ vpc_route_tables_tags }}"
#   register: ec2_vpc_out
#   when: nat_gateway_info.changed
